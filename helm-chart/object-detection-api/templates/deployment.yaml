apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "object-detection-api.fullname" . }}
  labels:
    {{- include "object-detection-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "object-detection-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "object-detection-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "object-detection-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers.modelDownloader.enabled }}
      initContainers:
        - name: model-downloader
          image: {{ .Values.initContainers.modelDownloader.image }}
          command:
            {{- toYaml .Values.initContainers.modelDownloader.command | nindent 12 }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "object-detection-api.fullname" . }}-aws-credentials
                  key: accessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "object-detection-api.fullname" . }}-aws-credentials
                  key: secretAccessKey
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.awsCredentials.region }}
          volumeMounts:
            - name: models-storage
              mountPath: /models
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.awsCredentials.accessKeyId }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "object-detection-api.fullname" . }}-aws-credentials
                  key: accessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "object-detection-api.fullname" . }}-aws-credentials
                  key: secretAccessKey
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.awsCredentials.region }}
            {{- end }}
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.models.enabled }}
            - name: models-storage
              mountPath: /app/models
            {{- end }}
            {{- if .Values.persistence.data.enabled }}
            - name: data-storage
              mountPath: /app/data
            {{- end }}
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.persistence.models.enabled }}
        - name: models-storage
          persistentVolumeClaim:
            claimName: {{ include "object-detection-api.fullname" . }}-models
        {{- end }}
        {{- if .Values.persistence.data.enabled }}
        - name: data-storage
          persistentVolumeClaim:
            claimName: {{ include "object-detection-api.fullname" . }}-data
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "object-detection-api.fullname" . }}-config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 